{"ast":null,"code":"var _jsxFileName = \"/Users/guidogreco/Udemy/React/Food App/src/components/Layout/HeaderCartButton.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport CartIcon from '../Cart/CartIcon';\nimport CartContext from '../../store/cart-context';\nimport styles from './HeaderCartButton.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeaderCartButton = props => {\n  _s();\n\n  const [btnIsHighLighted, setBtnIsHighLighted] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const {\n    items\n  } = cartCtx; //object restructuring es para obteneer los items del cart, asi solo los items del context quedn en la depetendencia\n\n  const numberOfCartItems = cartCtx.items.reduce((curNumber, item) => {\n    return curNumber + item.amount;\n  }, 0);\n  const btnClasses = `${styles.button} ${btnIsHighLighted ? styles.bump : ''}`;\n  useEffect(() => {\n    if (cartCtx.items.length === 0) {\n      return;\n    }\n\n    setBtnIsHighLighted(true);\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: btnClasses,\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.icon,\n      children: /*#__PURE__*/_jsxDEV(CartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.badge,\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.badge,\n      children: numberOfCartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 12\n  }, this);\n};\n\n_s(HeaderCartButton, \"KKHtVpfwnvSChzqESjeYXZ88VOo=\");\n\n_c = HeaderCartButton;\nexport default HeaderCartButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderCartButton\");","map":{"version":3,"sources":["/Users/guidogreco/Udemy/React/Food App/src/components/Layout/HeaderCartButton.js"],"names":["useContext","useEffect","useState","CartIcon","CartContext","styles","HeaderCartButton","props","btnIsHighLighted","setBtnIsHighLighted","cartCtx","items","numberOfCartItems","reduce","curNumber","item","amount","btnClasses","button","bump","length","onClick","icon","badge"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAAA;;AAE9B,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,KAAD,CAAxD;AAEA,QAAMQ,OAAO,GAAGV,UAAU,CAACI,WAAD,CAA1B;AAGA,QAAM;AAACO,IAAAA;AAAD,MAAUD,OAAhB,CAP8B,CAON;;AAExB,QAAME,iBAAiB,GAAGF,OAAO,CAACC,KAAR,CAAcE,MAAd,CAAqB,CAACC,SAAD,EAAYC,IAAZ,KAAqB;AAChE,WAAOD,SAAS,GAAGC,IAAI,CAACC,MAAxB;AACH,GAFyB,EAEvB,CAFuB,CAA1B;AAKA,QAAMC,UAAU,GAAI,GAAEZ,MAAM,CAACa,MAAO,IAAGV,gBAAgB,GAAIH,MAAM,CAACc,IAAX,GAAkB,EAAG,EAA5E;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,OAAO,CAACC,KAAR,CAAcS,MAAd,KAAyB,CAA7B,EAAgC;AAC5B;AACH;;AACDX,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,GALQ,EAKN,CAACE,KAAD,CALM,CAAT;AAOA,sBAAO;AAAQ,IAAA,SAAS,EAAEM,UAAnB;AAA+B,IAAA,OAAO,EAAEV,KAAK,CAACc,OAA9C;AAAA,4BACH;AAAM,MAAA,SAAS,EAAEhB,MAAM,CAACiB,IAAxB;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADG,eAIH;AAAM,MAAA,SAAS,EAAEjB,MAAM,CAACkB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJG,eAKH;AAAM,MAAA,SAAS,EAAElB,MAAM,CAACkB,KAAxB;AAAA,gBAAgCX;AAAhC;AAAA;AAAA;AAAA;AAAA,YALG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAOH,CA9BD;;GAAMN,gB;;KAAAA,gB;AAgCN,eAAeA,gBAAf","sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport CartIcon from '../Cart/CartIcon';\nimport CartContext from '../../store/cart-context';\nimport styles from './HeaderCartButton.module.css'\n\nconst HeaderCartButton = props => {\n\n    const [btnIsHighLighted, setBtnIsHighLighted] = useState(false)\n    \n    const cartCtx = useContext(CartContext);\n\n\n    const {items} = cartCtx;//object restructuring es para obteneer los items del cart, asi solo los items del context quedn en la depetendencia\n\n    const numberOfCartItems = cartCtx.items.reduce((curNumber, item) => {\n        return curNumber + item.amount;\n    }, 0);\n\n\n    const btnClasses = `${styles.button} ${btnIsHighLighted ?  styles.bump : ''}`;\n\n    useEffect(() => {\n        if (cartCtx.items.length === 0) {\n            return;\n        }\n        setBtnIsHighLighted(true);\n    }, [items])\n\n    return <button className={btnClasses} onClick={props.onClick}>\n        <span className={styles.icon}>\n            <CartIcon />\n        </span>\n        <span className={styles.badge}>Your Cart</span>\n        <span className={styles.badge}>{numberOfCartItems}</span>\n    </button>\n}\n\nexport default HeaderCartButton;"]},"metadata":{},"sourceType":"module"}