{"ast":null,"code":"var _jsxFileName = \"/Users/guidogreco/Udemy/React/Food App/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD_ITEM') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD_ITEM',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHanlder = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    // items: cartState.item,\n    // totalAmount: cartState.totalAmount,\n    // addItem: addItemToCartHandler,\n    // removeItem: removeItemFromCartHanlder\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHanlder\n  };\n  console.log(cartContext);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/guidogreco/Udemy/React/Food App/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHanlder","id","cartContext","addItem","removeItem","console","log","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAA/E;AACA,WAAO;AACHX,MAAAA,KAAK,EAAEM,YADJ;AAEHL,MAAAA,WAAW,EAAEQ;AAFV,KAAP;AAIH;;AACD,SAAOV,gBAAP;AACH,CAVD;;AAYA,MAAMa,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAE1B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMiB,oBAAoB,GAAIR,IAAD,IAAU;AACnCO,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAE,UAAP;AAAmBG,MAAAA,IAAI,EAAEA;AAAzB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMS,yBAAyB,GAAIC,EAAD,IAAQ;AACtCH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAE,QAAP;AAAiBa,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAI;AACjB;AACA;AACA;AACA;AAEAnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KANA;AAOjBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAPN;AAQjBmB,IAAAA,OAAO,EAAEJ,oBARQ;AASjBK,IAAAA,UAAU,EAAEJ;AATK,GAArB;AAWAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AAEA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEA,WAA7B;AAAA,cACFN,KAAK,CAACW;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CA5BD;;GAAMZ,Y;;KAAAA,Y;AA8BN,eAAeA,YAAf","sourcesContent":["import React, {useReducer} from \"react\";\n\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n}\n\nconst cartReducer = (state, action) => {\n    if (action.type === 'ADD_ITEM') {\n        const updatedItems = state.items.concat(action.item);\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        }\n    }\n    return defaultCartState\n}\n\nconst CartProvider = props => {\n\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState)\n\n    const addItemToCartHandler = (item) => {\n        dispatchCartAction({type: 'ADD_ITEM', item: item});\n    };\n\n    const removeItemFromCartHanlder = (id) => {\n        dispatchCartAction({type: 'REMOVE', id: id})\n    }\n\n    const cartContext =  {\n        // items: cartState.item,\n        // totalAmount: cartState.totalAmount,\n        // addItem: addItemToCartHandler,\n        // removeItem: removeItemFromCartHanlder\n\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHanlder\n    }\n    console.log(cartContext)\n\n    return <CartContext.Provider value={cartContext}>\n        {props.children}\n    </CartContext.Provider>\n};\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}