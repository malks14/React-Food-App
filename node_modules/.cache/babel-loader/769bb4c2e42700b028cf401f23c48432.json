{"ast":null,"code":"var _jsxFileName = \"/Users/guidogreco/Udemy/React/Food App/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport CartItem from './CartItem';\nimport Modal from '../UI/Modal';\nimport CartContext from '../../store/cart-context';\nimport styles from './Cart.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {};\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 23\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles['button--alt'],\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Cart, \"5vyuBAd9ctzs1tCKQUMcCu/LGtk=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/guidogreco/Udemy/React/Food App/src/components/Cart/Cart.js"],"names":["useContext","CartItem","Modal","CartContext","styles","Cart","props","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","cartItemAddHandler","item","addItem","amount","cartItems","map","name","price","bind","onClose","total","actions","button"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA;;AAClB,QAAMC,OAAO,GAAEP,UAAU,CAACG,WAAD,CAAzB;AAEA,QAAMK,WAAW,GAAI,IAAGD,OAAO,CAACC,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD;AAEA,QAAMC,QAAQ,GAAGH,OAAO,CAACI,KAAR,CAAcC,MAAd,GAAuB,CAAxC;;AAEA,QAAMC,qBAAqB,GAAGC,EAAE,IAAI,CAAE,CAAtC;;AAEA,QAAMC,kBAAkB,GAAGC,IAAI,IAAK;AAChCT,IAAAA,OAAO,CAACU,OAAR,CAAgB,EAAC,GAAGD,IAAJ;AAAUE,MAAAA,MAAM,EAAC;AAAjB,KAAhB;AACH,GAFD;;AAIA,QAAMC,SAAS,gBAAG;AAAI,IAAA,SAAS,EAAEf,MAAM,CAAC,YAAD,CAArB;AAAA,cACbG,OAAO,CAACI,KAAR,CAAcS,GAAd,CAAkBJ,IAAI,iBACvB,QAAC,QAAD;AAEA,MAAA,IAAI,EAAEA,IAAI,CAACK,IAFX;AAGA,MAAA,MAAM,EAAEL,IAAI,CAACE,MAHb;AAIA,MAAA,KAAK,EAAEF,IAAI,CAACM,KAJZ;AAKA,MAAA,QAAQ,EAAET,qBAAqB,CAACU,IAAtB,CAA2B,IAA3B,EAAiCP,IAAI,CAACF,EAAtC,CALV;AAMA,MAAA,KAAK,EAAEC,kBAAkB,CAACQ,IAAnB,CAAwB,IAAxB,EAA8BP,IAA9B;AANP,OACKA,IAAI,CAACF,EADV;AAAA;AAAA;AAAA;AAAA,YADC;AADa;AAAA;AAAA;AAAA;AAAA,UAAlB;;AAaA,sBAAO,QAAC,KAAD;AAAO,IAAA,OAAO,EAAER,KAAK,CAACkB,OAAtB;AAAA,eACFL,SADE,eAEH;AAAK,MAAA,SAAS,EAAEf,MAAM,CAACqB,KAAvB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOjB;AAAP;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,eAMH;AAAK,MAAA,SAAS,EAAEJ,MAAM,CAACsB,OAAvB;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAEtB,MAAM,CAAC,aAAD,CAAzB;AAA0C,QAAA,OAAO,EAAEE,KAAK,CAACkB,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKd,QAAQ,iBAAI;AAAQ,QAAA,SAAS,EAAEN,MAAM,CAACuB,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YANG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAWH,CArCD;;GAAMtB,I;;KAAAA,I;AAuCN,eAAeA,IAAf","sourcesContent":["import { useContext } from 'react'\nimport CartItem from './CartItem';\nimport Modal from '../UI/Modal';\nimport CartContext from '../../store/cart-context';\nimport styles from './Cart.module.css'\n\nconst Cart = props => {\n    const cartCtx =useContext(CartContext);\n\n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n\n    const hasItems = cartCtx.items.length > 0;\n\n    const cartItemRemoveHandler = id => {};\n\n    const cartItemAddHandler = item =>  {\n        cartCtx.addItem({...item, amount:1})\n    };\n\n    const cartItems = <ul className={styles['cart-items']}>\n        {cartCtx.items.map(item => (\n        <CartItem \n        key={item.id}\n        name={item.name}\n        amount={item.amount}\n        price={item.price}\n        onRemove={cartItemRemoveHandler.bind(null, item.id)}\n        onAdd={cartItemAddHandler.bind(null, item)}\n        />\n        ))}\n        </ul>\n\n    return <Modal onClose={props.onClose}>\n        {cartItems}\n        <div className={styles.total}>\n            <span>Total Amount</span>\n            <span>{totalAmount}</span>\n        </div>\n        <div className={styles.actions}>\n            <button className={styles['button--alt']} onClick={props.onClose}>Close</button>\n            {hasItems && <button className={styles.button}>Order</button>}\n        </div>\n        </Modal>\n}\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}