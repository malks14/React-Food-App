{"ast":null,"code":"var _jsxFileName = \"/Users/guidogreco/Udemy/React/Food App/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport CartItem from './CartItem';\nimport Modal from '../UI/Modal';\nimport CartContext from '../../store/cart-context';\nimport styles from './Cart.module.css';\nimport Checkout from './Checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const submitOrderHandler = async userData => {\n    setIsSubmitting(true);\n    await fetch('https://newproject-f7cc6-default-rtdb.firebaseio.com/order.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n    setIsSubmitting(false);\n    setDidSubmit(true);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 23\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles['button--alt'],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 30\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 24\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 32\n  }, this);\n\n  const isSubmittingModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Sending order data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 38\n  }, this);\n\n  const didSubmitModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Succesfully sent the order!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [!isSubmitting && !didSubmit && cartModalContent, isSubmitting && isSubmittingModalContent, !isSubmitting && didSubmit && didSubmitModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Cart, \"mkyP1T14krwt2zz5rXlJIrG6NCM=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/guidogreco/Udemy/React/Food App/src/components/Cart/Cart.js"],"names":["React","useContext","useState","CartItem","Modal","CartContext","styles","Checkout","Cart","props","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","cartItems","map","name","price","bind","modalActions","actions","onClose","button","cartModalContent","total","isSubmittingModalContent","didSubmitModalContent"],"mappings":"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","sourcesContent":["import React,{ useContext, useState } from 'react'\nimport CartItem from './CartItem';\nimport Modal from '../UI/Modal';\nimport CartContext from '../../store/cart-context';\nimport styles from './Cart.module.css';\nimport Checkout from './Checkout';\n\nconst Cart = props => {\n\n    const [isCheckout, setIsCheckout] = useState(false)\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [didSubmit, setDidSubmit] = useState(false);\n    const cartCtx =useContext(CartContext);\n\n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n\n    const hasItems = cartCtx.items.length > 0;\n\n    const cartItemRemoveHandler = id => {\n        cartCtx.removeItem(id);\n    };\n\n    const cartItemAddHandler = item =>  {\n        cartCtx.addItem({...item, amount:1})\n    };\n\n    const orderHandler = () => {\n        setIsCheckout(true);\n    };\n\n    const submitOrderHandler = async (userData) => {\n        setIsSubmitting(true)\n         await fetch('https://newproject-f7cc6-default-rtdb.firebaseio.com/order.json', {\n            method: 'POST',\n            body: JSON.stringify({\n                user:userData,\n                orderedItems: cartCtx.items\n            })\n        });\n        setIsSubmitting(false);\n        setDidSubmit(true);\n    };\n\n    const cartItems = <ul className={styles['cart-items']}>\n        {cartCtx.items.map(item => (\n        <CartItem \n        key={item.id}\n        name={item.name}\n        amount={item.amount}\n        price={item.price}\n        onRemove={cartItemRemoveHandler.bind(null, item.id)}\n        onAdd={cartItemAddHandler.bind(null, item)}\n        />\n    ))}\n    </ul>\n\n    const modalActions =   ( <div className={styles.actions}>\n    <button className={styles['button--alt']} onClick={props.onClose}>Close</button>\n    {hasItems && <button className={styles.button} onClick={orderHandler}>Order</button>}\n    </div>\n    );\n\n    const cartModalContent = ( <React.Fragment>\n         {cartItems}\n        <div className={styles.total}>\n            <span>Total Amount</span>\n            <span>{totalAmount}</span>\n        </div>\n        {isCheckout && <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose}/>}\n        {!isCheckout && modalActions}\n    </React.Fragment>\n    );\n\n    const isSubmittingModalContent = <p>Sending order data...</p>;\n\n    const didSubmitModalContent = \n        <React.Fragment> \n            <p>Succesfully sent the order!</p>\n            <div className={styles.actions}>\n                <button className={styles.button} onClick={props.onClose}>Close</button>\n            </div>\n        </React.Fragment>;\n\n    return <Modal onClose={props.onClose}>\n        {!isSubmitting && !didSubmit  && cartModalContent}\n        {isSubmitting && isSubmittingModalContent}\n        {!isSubmitting && didSubmit && didSubmitModalContent}\n        </Modal>\n}\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}