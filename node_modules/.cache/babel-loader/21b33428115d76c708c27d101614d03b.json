{"ast":null,"code":"var _jsxFileName = \"/Users/guidogreco/Udemy/React/Food App/src/components/Meals/MealItem/MealItemForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport styles from './MealItemForm.module.css';\nimport Input from '../../UI/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MealItemForm = props => {\n  _s();\n\n  const [amountIsValid, setAmountIsValid] = useState(true); //para el mensaje de error\n\n  const amountInputRef = useRef();\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredAmount = amountInputRef.current.value; //siempre queda como string\n\n    const enteredAmountNumber = +enteredAmount; //hace que el string anterior sea numero\n\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\n      setAmountIsValid(false);\n      return;\n    }\n\n    props.onAddToCart(enteredAmountNumber);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: amountInputRef,\n      label: \"Amount\",\n      input: {\n        id: 'amount' + props.id,\n        type: 'number',\n        min: '1',\n        max: '5',\n        step: '1',\n        //es el que sume de a 1?\n        defaultValue: '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+ Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), !amountIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a valid amount (1-5).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MealItemForm, \"49LGRK4jBiAcXkiYfsTkxzkpjmw=\");\n\n_c = MealItemForm;\nexport default MealItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"sources":["/Users/guidogreco/Udemy/React/Food App/src/components/Meals/MealItem/MealItemForm.js"],"names":["React","useRef","useState","styles","Input","MealItemForm","props","amountIsValid","setAmountIsValid","amountInputRef","submitHandler","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","onAddToCart","form","id","type","min","max","step","defaultValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,IAAD,CAAlD,CAF4B,CAE8B;;AAE1D,QAAMO,cAAc,GAAGR,MAAM,EAA7B;;AAEA,QAAMS,aAAa,GAAGC,KAAK,IAAI;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAf,CAAuBC,KAA7C,CAH2B,CAGyB;;AACpD,UAAMC,mBAAmB,GAAG,CAACH,aAA7B,CAJ2B,CAIgB;;AAC3C,QACIA,aAAa,CAACI,IAAd,GAAqBC,MAArB,KAAgC,CAAhC,IACAF,mBAAmB,GAAG,CADtB,IAEAA,mBAAmB,GAAG,CAH1B,EAIE;AACER,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA;AACH;;AAEDF,IAAAA,KAAK,CAACa,WAAN,CAAkBH,mBAAlB;AACH,GAfD;;AAiBA,sBACI;AAAM,IAAA,SAAS,EAAEb,MAAM,CAACiB,IAAxB;AAA8B,IAAA,QAAQ,EAAEV,aAAxC;AAAA,4BACI,QAAC,KAAD;AACA,MAAA,GAAG,EAAED,cADL;AAEA,MAAA,KAAK,EAAC,QAFN;AAGA,MAAA,KAAK,EAAE;AACHY,QAAAA,EAAE,EAAE,WAAWf,KAAK,CAACe,EADlB;AAEHC,QAAAA,IAAI,EAAE,QAFH;AAGHC,QAAAA,GAAG,EAAE,GAHF;AAIHC,QAAAA,GAAG,EAAE,GAJF;AAKHC,QAAAA,IAAI,EAAE,GALH;AAKQ;AACXC,QAAAA,YAAY,EAAE;AANX;AAHP;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,EAcK,CAACnB,aAAD,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdvB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAzCD;;GAAMF,Y;;KAAAA,Y;AA2CN,eAAeA,YAAf","sourcesContent":["import React, {useRef, useState} from 'react';\nimport styles from './MealItemForm.module.css'\nimport Input from '../../UI/Input';\n\n\nconst MealItemForm = (props) => {\n\n    const [amountIsValid, setAmountIsValid] = useState(true); //para el mensaje de error\n\n    const amountInputRef = useRef();\n\n    const submitHandler = event => {\n        event.preventDefault();\n        \n        const enteredAmount = amountInputRef.current.value; //siempre queda como string\n        const enteredAmountNumber = +enteredAmount //hace que el string anterior sea numero\n        if(\n            enteredAmount.trim().length === 0 || \n            enteredAmountNumber < 1 || \n            enteredAmountNumber > 5\n        ) {\n            setAmountIsValid(false);\n            return;\n        }\n\n        props.onAddToCart(enteredAmountNumber);\n    }\n\n    return (\n        <form className={styles.form} onSubmit={submitHandler}>\n            <Input \n            ref={amountInputRef}\n            label='Amount'\n            input={{\n                id: 'amount' + props.id,\n                type: 'number',\n                min: '1',\n                max: '5',\n                step: '1', //es el que sume de a 1?\n                defaultValue: '1'\n            }}\n            />\n            <button>+ Add</button>\n            {!amountIsValid && <p>Please enter a valid amount (1-5).</p>}\n        </form>\n    )\n}\n\nexport default MealItemForm;"]},"metadata":{},"sourceType":"module"}