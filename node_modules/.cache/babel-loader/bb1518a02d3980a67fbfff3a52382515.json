{"ast":null,"code":"var _jsxFileName = \"/Users/guidogreco/Udemy/React/Food App/src/store/CartProvider.js\";\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\"; // const defaultCartState = {\n//     items: [],\n//     totalAmount: 0\n// }\n// const cartReducer = (state, action) => {\n//     if (action.type === 'ADD_ITEM') {\n//         const updatedItems = state.items.concat(action.item);\n//         const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount\n//         return {\n//             items: updatedItems,\n//             totalAmount: updatedTotalAmount\n//         }\n//     }\n//     return defaultCartState\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartProvider = props => {\n  // const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState)\n  // const addItemToCartHandler = (item) => {\n  //     dispatchCartAction({type: 'ADD_ITEM', item: item});\n  // };\n  // const removeItemFromCartHanlder = (id) => {\n  //     dispatchCartAction({type: 'REMOVE', id: id})\n  // }\n  const cartContext = {\n    // items: cartState.item,\n    // totalAmount: cartState.totalAmount,\n    // addItem: addItemToCartHandler,\n    // removeItem: removeItemFromCartHanlder\n    items: [],\n    totalAmount: 0,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHanlder\n  };\n  console.log(cartState);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n};\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/guidogreco/Udemy/React/Food App/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","CartProvider","props","cartContext","items","totalAmount","addItem","addItemToCartHandler","removeItem","removeItemFromCartHanlder","console","log","cartState","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAE1B;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA,QAAMC,WAAW,GAAI;AACjB;AACA;AACA;AACA;AAEAC,IAAAA,KAAK,EAAE,EANU;AAOjBC,IAAAA,WAAW,EAAE,CAPI;AAQjBC,IAAAA,OAAO,EAAEC,oBARQ;AASjBC,IAAAA,UAAU,EAAEC;AATK,GAArB;AAWAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AAEA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAET,WAA7B;AAAA,cACFD,KAAK,CAACW;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CA5BD;;KAAMZ,Y;AA8BN,eAAeA,YAAf","sourcesContent":["import React, {useReducer} from \"react\";\n\nimport CartContext from \"./cart-context\";\n\n// const defaultCartState = {\n//     items: [],\n//     totalAmount: 0\n// }\n\n// const cartReducer = (state, action) => {\n//     if (action.type === 'ADD_ITEM') {\n//         const updatedItems = state.items.concat(action.item);\n//         const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount\n//         return {\n//             items: updatedItems,\n//             totalAmount: updatedTotalAmount\n//         }\n//     }\n//     return defaultCartState\n// }\n\nconst CartProvider = props => {\n\n    // const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState)\n\n    // const addItemToCartHandler = (item) => {\n    //     dispatchCartAction({type: 'ADD_ITEM', item: item});\n    // };\n\n    // const removeItemFromCartHanlder = (id) => {\n    //     dispatchCartAction({type: 'REMOVE', id: id})\n    // }\n\n    const cartContext =  {\n        // items: cartState.item,\n        // totalAmount: cartState.totalAmount,\n        // addItem: addItemToCartHandler,\n        // removeItem: removeItemFromCartHanlder\n\n        items: [],\n        totalAmount: 0,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHanlder\n    }\n    console.log(cartState)\n\n    return <CartContext.Provider value={cartContext}>\n        {props.children}\n    </CartContext.Provider>\n};\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}